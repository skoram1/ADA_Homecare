// Below query filters EU Home Care inventory from dp_inventory.inv_fct_emea.
// With date rane  -->  AND to_date(CAST(inv.calday as string), "yyyyMMdd") = date_add(current_date(), -1) -- yday date


SELECT
  distinct TRIM(
    leading '0'
    FROM
      material
  ) AS material_id,
  tdc_d.category,
  tdc_d.tdc_val,
  valclass_d.material_type_derived,
  inv.plant as site_id,
  inv.calday as `Date`,
  SUM(inv.buom_total_plant_stock) as buom_total_plant_stock,
  SUM(inv.buom_stock_in_transit) as buom_stock_in_transit,
  SUM(inv.buom_mrp_available_csp_agg) as buom_mrp_available_csp_agg,
  SUM(inv.buom_quality_inspection) as buom_quality_inspection,
  SUM(inv.buom_unrestricted) as buom_unrestricted,
  SUM(inv.buom_blocked) as buom_blocked,
  SUM(inv.buom_pg_owned_stock) as buom_pg_owned_stock,
  SUM(inv.buom_safety_stock) as buom_safety_stock,
  SUM(inv.buom_maximum_stock) as buom_maximum_stock,
  SUM(inv.buom_released_orders_fpc_only) as buom_released_orders_fpc_only,
  SUM(inv.c_pal_total_plant_stock) as c_pal_total_plant_stock,
  SUM(inv.buom_shipment_actuals) as buom_shipment_actuals,
  SUM(inv.su_shipment_actuals) as su_shipment_actuals,
  SUM(inv.msu_shipment_actuals) as msu_shipment_actuals,
  SUM(inv.buom_maximum_stock_ship_det_portion) as buom_maximum_stock_ship_det_portion,
  SUM(inv.buom_maximum_stock_original_apo_sap) as buom_maximum_stock_original_apo_sap,
  SUM(inv.buom_maximum_stock_otherwise_apo_sap) as buom_maximum_stock_otherwise_apo_sap,
  SUM(inv.su_total_plant_stock) as su_total_plant_stock,
  SUM(inv.su_stock_in_transit) as su_stock_in_transit,
  SUM(inv.su_mrp_available_csp_agg) as su_mrp_available_csp_agg,
  SUM(inv.su_quality_inspection) as su_quality_inspection,
  SUM(inv.su_unrestricted) as su_unrestricted,
  SUM(inv.su_blocked) as su_blocked,
  SUM(inv.su_pg_owned_stock) as su_pg_owned_stock,
  SUM(inv.su_safety_stock) as su_safety_stock,
  SUM(inv.su_maximum_stock) as su_maximum_stock,
  SUM(inv.su_released_orders_fpc_only) as su_released_orders_fpc_only,
  SUM(inv.msu_total_plant_stock) as msu_total_plant_stock,
  SUM(inv.msu_stock_in_transit) as msu_stock_in_transit,
  SUM(inv.msu_mrp_available_csp_agg) as msu_mrp_available_csp_agg,
  SUM(inv.msu_quality_inspection) as msu_quality_inspection,
  SUM(inv.msu_unrestricted) as msu_unrestricted,
  SUM(inv.msu_blocked) as msu_blocked,
  SUM(inv.msu_pg_owned_stock) as msu_pg_owned_stock,
  SUM(inv.msu_safety_stock) as msu_safety_stock,
  SUM(inv.msu_maximum_stock) as msu_maximum_stock,
  SUM(inv.msu_released_orders_fpc_only) as msu_released_orders_fpc_only,
  SUM(inv.raw_total_plant_stock) as raw_total_plant_stock,
  SUM(inv.raw_stock_in_transit) as raw_stock_in_transit,
  SUM(inv.raw_mrp_available_csp_agg) as raw_mrp_available_csp_agg,
  SUM(inv.raw_quality_inspection) as raw_quality_inspection,
  SUM(inv.raw_unrestricted) as raw_unrestricted,
  SUM(inv.raw_blocked) as raw_blocked,
  SUM(inv.raw_pg_owned_stock) as raw_pg_owned_stock,
  SUM(inv.raw_safety_stock) as raw_safety_stock,
  SUM(inv.raw_maximum_stock) as raw_maximum_stock,
  SUM(inv.raw_released_orders_fpc_only) as raw_released_orders_fpc_only,
  SUM(inv.usd_total_plant_stock) as usd_total_plant_stock,
  SUM(inv.usd_stock_in_transit) as usd_stock_in_transit,
  SUM(inv.usd_mrp_available_csp_agg) as usd_mrp_available_csp_agg,
  SUM(inv.usd_quality_inspection) as usd_quality_inspection,
  SUM(inv.usd_unrestricted) as usd_unrestricted,
  SUM(inv.usd_blocked) as usd_blocked,
  SUM(inv.usd_pg_owned_stock) as usd_pg_owned_stock,
  SUM(inv.usd_safety_stock) as usd_safety_stock,
  SUM(inv.usd_maximum_stock) as usd_maximum_stock,
  SUM(inv.usd_released_orders_fpc_only) as usd_released_orders_fpc_only,
  SUM(inv.stdpal_total_plant_stock) as stdpal_total_plant_stock,
  SUM(inv.stdpal_stock_in_transit) as stdpal_stock_in_transit,
  SUM(inv.stdpal_mrp_available_csp_agg) as stdpal_mrp_available_csp_agg,
  SUM(inv.stdpal_quality_inspection) as stdpal_quality_inspection,
  SUM(inv.stdpal_unrestricted) as stdpal_unrestricted,
  SUM(inv.stdpal_blocked) as stdpal_blocked,
  SUM(inv.stdpal_pg_owned_stock) as stdpal_pg_owned_stock,
  SUM(inv.stdpal_safety_stock) as stdpal_safety_stock,
  SUM(inv.stdpal_maximum_stock) as stdpal_maximum_stock,
  SUM(inv.stdpal_released_orders_fpc_only) as stdpal_released_orders_fpc_only,
  SUM(inv.buom_consignment_qi) as buom_consignment_qi,
  SUM(inv.su_consignment_qi) as su_consignment_qi,
  SUM(inv.msu_consignment_qi) as msu_consignment_qi,
  SUM(inv.raw_consignment_qi) as raw_consignment_qi,
  SUM(inv.usd_consignment_qi) as usd_consignment_qi,
  SUM(inv.stdpal_consignment_qi) as stdpal_consignment_qi,
  SUM(inv.buom_consignment_unrestricted) as buom_consignment_unrestricted,
  SUM(inv.su_consignment_unrestricted) as su_consignment_unrestricted,
  SUM(inv.msu_consignment_unrestricted) as msu_consignment_unrestricted,
  SUM(inv.raw_consignment_unrestricted) as raw_consignment_unrestricted,
  SUM(inv.usd_consignment_unrestricted) as usd_consignment_unrestricted,
  SUM(inv.stdpal_consignment_unrestricted) as stdpal_consignment_unrestricted,
  SUM(inv.buom_consignment_blocked) as buom_consignment_blocked,
  SUM(inv.su_consignment_blocked) as su_consignment_blocked,
  SUM(inv.msu_consignment_blocked) as msu_consignment_blocked,
  SUM(inv.raw_consignment_blocked) as raw_consignment_blocked,
  SUM(inv.usd_consignment_blocked) as usd_consignment_blocked,
  SUM(inv.stdpal_consignment_blocked) as stdpal_consignment_blocked,
  SUM(inv.buom_stock_transfer_plant_sloc) as buom_stock_transfer_plant_sloc,
  SUM(inv.su_stock_transfer_plant_sloc) as su_stock_transfer_plant_sloc,
  SUM(inv.msu_stock_transfer_plant_sloc) as msu_stock_transfer_plant_sloc,
  SUM(inv.raw_stock_transfer_plant_sloc) as raw_stock_transfer_plant_sloc,
  SUM(inv.usd_stock_transfer_plant_sloc) as usd_stock_transfer_plant_sloc,
  SUM(inv.stdpal_stock_transfer_plant_sloc) as stdpal_stock_transfer_plant_sloc,
  SUM(inv.site_demand_forecast_week1) as site_demand_forecast_week1,
  SUM(inv.site_demand_forecast_week2) as site_demand_forecast_week2,
  SUM(inv.site_demand_forecast_week3) as site_demand_forecast_week3,
  SUM(inv.site_demand_forecast_week4) as site_demand_forecast_week4,
  SUM(inv.site_demand_forecast_week5) as site_demand_forecast_week5,
  SUM(inv.site_demand_forecast_week6) as site_demand_forecast_week6,
  SUM(inv.site_demand_forecast_week7) as site_demand_forecast_week7,
  SUM(inv.site_demand_forecast_week8) as site_demand_forecast_week8,
  SUM(inv.site_demand_forecast_week26) as site_demand_forecast_week26,
  SUM(inv.network_demand_forecast_week1) as network_demand_forecast_week1,
  SUM(inv.network_demand_forecast_week2) as network_demand_forecast_week2,
  SUM(inv.network_demand_forecast_week3) as network_demand_forecast_week3,
  SUM(inv.network_demand_forecast_week4) as network_demand_forecast_week4,
  SUM(inv.network_demand_forecast_week5) as network_demand_forecast_week5,
  SUM(inv.network_demand_forecast_week6) as network_demand_forecast_week6,
  SUM(inv.network_demand_forecast_week7) as network_demand_forecast_week7,
  SUM(inv.network_demand_forecast_week8) as network_demand_forecast_week8,
  SUM(inv.network_demand_forecast_week26) as network_demand_forecast_week26,
  SUM(inv.mrp_inventory_for_dfc) as mrp_inventory_for_dfc,
  SUM(inv.total_inventory_for_dfc) as total_inventory_for_dfc
FROM
  dp_inventory.inv_fct_emea AS inv
  LEFT JOIN dp_inventory.plant_dim AS plant_d ON inv.plant = plant_d.plant
  JOIN dp_inventory.tdc_val_dim AS tdc_d ON inv.tdc_val = tdc_d.tdc_val
  JOIN dp_inventory.val_class_dim as valclass_d ON inv.valuation_class = valclass_d.valuation_class
WHERE
  inv.COMPLEX_DECOMPOSITION IN ("C", "S")
  AND IFNULL(plant_d.JOINT_VENTURE_FLAG, "") <> "JV"
  AND tdc_d.sector = "F&HC"
  AND tdc_d.subsector = "HOMECARE"
  AND to_date(CAST(inv.calday as string), "yyyyMMdd") = date_add(current_date(), -1) -- yday date
  AND inv.region IN ("EUR", "EUF", "EUE")
GROUP BY
  material_id,
  tdc_d.sector,
  tdc_d.category,
  tdc_d.tdc_val,
  valclass_d.material_type_derived,
  site_id,
  inv.calday
